@using System.Web.Mvc;

@functions
{
    private static new HtmlHelper<object> Html
    {
        get { return ((WebViewPage)CurrentPage).Html; }
    }

    private static UrlHelper Url
    {
        get { return ((WebViewPage)CurrentPage).Url; }
    }
}



@helper UpLoader(string id, string label)
{
    <div class="form-group">
        <label for="@id" class="col-sm-2 control-label">@label</label>
        <div class="col-sm-10">
            <input type="file" name="file" id="@id" class="form-control" multiple />
        </div>
    </div>
}


@helper CreateForms(IEnumerable<FormFields> fields, bool asyncFileUpload, string submitControlId, string url, string successfunction, string asyncLoadUrl = "")
{
    var filFieldId = "";
    string misc = "";
    foreach (FormFields field in fields)
    {

        <div class="form-group">
            @if (!string.IsNullOrWhiteSpace(field.Caption))
            {
                <label for="@field.FieldId" class="col-sm-2 control-label">@field.Caption</label>
            }
            <div class="col-sm-10">
                @{
            var x = string.Empty;
            switch (field.Type)
            {
                case FormFields.FieldType.file:
                    {
                        <input type="file" name="@field.FieldId" id="@field.FieldId" class="form-control" />
                        filFieldId = @field.FieldId;
                        break;
                    }
                case FormFields.FieldType.Text:
                    {
                        <input type="text" name="@field.FieldId" id="@field.FieldId" class="form-control" placeholder="@field.PlaceholderText" />
                        break;
                    }
                case FormFields.FieldType.Radio:
                    {
                        <input type="radio" name="@field.FieldId" id="@field.FieldId" />
                        break;
                    }
                case FormFields.FieldType.DropdownList:
                    {

                        break;
                    }
                case FormFields.FieldType.Checkbox:
                    {
                        <input type="checkbox" name="@field.FieldId" id="@field.FieldId" />
                        break;
                    }
                case FormFields.FieldType.TextArea:
                    {
                        <textarea name="@field.FieldId" id="@field.FieldId" class="form-control" />
                        break;
                    }

                case FormFields.FieldType.hidden:
                    {
                        <input type="hidden" name="@field.FieldId" id="@field.FieldId" value="@field.Caption" />
                        break;
                    }

            }
                }

            </div>
        </div>
    }

    if (asyncFileUpload)
    {
        <div class="form-group">
            <div class="col-md-8">
                <div class="progress progress-striped active">
                    <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                        <span class="sr-only">60% Complete</span>
                    </div>
                </div>
            </div>
        </div>
        <script type="text/javascript">
            $(document).ready(function () {
                $("@submitControlId").click(function () {

                    @foreach (FormFields field in fields)
                    {
                        if (field.Type == FormFields.FieldType.Text
                            || field.Type == FormFields.FieldType.TextArea
                             || field.Type == FormFields.FieldType.Checkbox
                            || field.Type == FormFields.FieldType.hidden)
                        {
                        misc += field.FieldId + " : "  + field.FieldFormatter.GetValueRetrivalString(field)+  ",";
                        }
                    }

                    var dModel = {
                        @UploadHelper.Html.Raw(misc)
                    };

                    var formData = new FormData();
                    var totalFiles = document.getElementById("@filFieldId").files;
                    @*for (var i = 0; i < totalFiles; i++) {
                        var file = document.getElementById("@filFieldId").files[i];

                        formData.append("FileUpload", file);
                        formData.append("model", JSON.stringify(dModel));
                    }*@

                    $.fn.uploadAjax(totalFiles, '@url', dModel, function (evt) {
                        var percentComplete = evt.loaded / evt.total;
                        $(".progress-bar").css('width', percentComplete * 100 + '%');
                        console.log(percentComplete);
                    }, @UploadHelper.Html.Raw( successfunction),null);
                });

            });
        </script>
    }
    else
    {
        <script type="text/javascript">
            $(document).ready(function () {
                $("@submitControlId").click(function () {

                    @foreach (FormFields field in fields)
                    {
                        if (field.Type == FormFields.FieldType.Text
                            || field.Type == FormFields.FieldType.TextArea
                             || field.Type == FormFields.FieldType.Checkbox
                            || field.Type == FormFields.FieldType.hidden)
                        {
                        misc += field.FieldId + " : "  + field.FieldFormatter.GetValueRetrivalString(field)+  ",";
                        }
                    }

                    var dModel = {
                        @UploadHelper.Html.Raw(misc)
                    };

                    $.fn.submitAjax( '@url',JSON.stringify( dModel), function (evt) {
                        var percentComplete = evt.loaded / evt.total;
                        console.log(percentComplete);
                    }, @UploadHelper.Html.Raw( successfunction),null);
                });

            });
            $.ajax({
                type: "GET",
                url: '@asyncLoadUrl',
                contentType: "application/json",
                processData: false,
                success: function (jSonData) {
                    if (jSonData != null && jSonData != undefined) {
                        var keys = Object.keys(jSonData);
                        for (var i = 0; i < keys.length; i++) {
                            var selec = '#'+ keys[i] ;
                            $(selec).val( jSonData[keys[i]]);
                        }
                        //formData.append("data", jSonData);
                    }
                },
                error: function (error) {
                    if (onError && typeof (onError) === "function") {
                        onError(error);
                    }
                }
            });

        </script>

    }

}
